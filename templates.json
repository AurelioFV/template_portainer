{
    "version": "2",
    "templates": [
        {
            "type": 1,
            "title": "Apache (Httpd)",
            "description": "Open-source HTTP server",
            "categories": [
                "Web"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
            "image": "httpd:latest",
            "ports": [
                "80/tcp"
            ],
            "volumes": [
                {
                    "container": "/usr/local/apache2/htdocs/"
                }
            ]
        },
        {
            "categories": [
                "Video"
            ],
            "description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "hotio/bazarr:release",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/bazarr.png",
            "name": "Bazarr",
            "platform": "linux",
            "ports": [
                "6767:6767/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Bazarr",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Bazarr",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/TV",
                    "container": "/tv"
                },
                {
                    "bind": "/portainer/Movies",
                    "container": "/movies"
                }
            ]
        },
        {
            "categories": [
                "Wiki"
            ],
            "description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Feautring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "DATABASE_PASSWORD",
                    "name": "DATABASE_PASSWORD"
                },
                {
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/bookstack2.png",
            "note": "Default login  is admin@admin.com with a password of password. The database created is called bookstackapp and the database user is called bookstack",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/bookstack/bookstack.yml",
                "url": "https://github.com/AurelioFV/template_portainer"
            },
            "title": "Bookstack",
            "type": 3
        },
        {
            "type": 3,
            "title": "Kavita",
            "name": "kavita",
            "description": "Kavita reading eBooks and PDFs",
            "categories": [
                "Books"
            ],
            "platform": "linux",
            "logo": "https://www.kavitareader.com/img/logo.png",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/kavita/kavita.yml"
            },
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Europe/Madrid",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "5000",
                    "label": "PORT",
                    "name": "PORT"
                }
            ]
        },
        {
            "type": 3,
            "title": "Code Server",
            "name": "code-server",
            "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
            "note": "Code-server is VS Code running on a remote server, accessible through the browser.",
            "categories": [
                "Tools"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/code-server.png",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/code-server/code-server.yml"
            },
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "GUID"
                },
                {
                    "default": "Europe/Madrid",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "PASSWORD",
                    "name": "PASSWORD"
                },
                {
                    "label": "SUDO_PASSWORD",
                    "name": "SUDO_PASSWORD"
                },
                {
                    "label": "PROXY_DOMAIN",
                    "name": "PROXY_DOMAIN"
                }
            ]
        },
        {
            "categories": [
                "FTP"
            ],
            "description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/davos:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/davos.png",
            "name": "davos",
            "note": "Configuration <ul><li><b>/config</b> - AppData Location</li><li><b>/downloads</b> - File Download Location</li></ul>",
            "platform": "linux",
            "ports": [
                "8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Davos",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Davos",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ]
        },
        {
            "type": 3,
            "title": "Dokku",
            "description": "Dokku setup as a compose file",
            "categories": [
                "PaaS"
            ],
            "platform": "linux",
            "logo": "",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/dokku/docker-compose.yml"
            },
            "env": [
                {
                    "name": "VERSION",
                    "label": "Dokku version",
                    "description": "Version of Dokku to use ('latest' if empty)",
                    "default": "latest"
                },
                {
                    "name": "DOKKU_HOSTNAME",
                    "label": "Dokku hostname",
                    "description": "Global hostname to be registered by Dokku"
                },
                {
                    "name": "VOLUME_PATH",
                    "label": "Dokku volume path",
                    "description": "Host path to be bound to /mnt/dokku (`/var/lib/dokku` if empty)",
                    "default": "/var/lib/dokku"
                },
                {
                    "name": "DOKKU_HOST_ROOT",
                    "label": "Dokku host root",
                    "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'",
                    "default": "/var/lib/dokku/home/dokku"
                },
                {
                    "name": "SSH_PORT",
                    "label": "SSH port",
                    "description": "Host port to expose SSH port of Dokku (22 if empty)",
                    "default": "22"
                },
                {
                    "name": "HTTP_PORT",
                    "label": "HTTP port",
                    "description": "Host port to expose HTTP port of Dokku (80 if empty)",
                    "default": "80"
                },
                {
                    "name": "HTTPS_PORT",
                    "label": "HTTPS port",
                    "description": "Host port to expose HTTPS port of Dokku (443 if empty)",
                    "default": "443"
                }
            ]
        },
        {
            "categories": [
                "Backup"
            ],
            "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/duplicati:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/duplicati-icon.png",
            "name": "duplicati",
            "platform": "linux",
            "ports": [
                "8200:8200/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Duplicati",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Duplicati",
                    "container": "/config"
                },
                {
                    "container": "/tmp"
                },
                {
                    "container": "/backups"
                },
                {
                    "container": "/source"
                }
            ]
        },
        {
            "type": 1,
            "title": "Elasticsearch",
            "description": "Open-source search and analytics engine",
            "categories": [
                "DB"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
            "image": "docker.elastic.co/elasticsearch/elasticsearch:7.15.1",
            "ports": [
                "9200/tcp",
                "9300/tcp"
            ],
            "volumes": [
                {
                    "container": "/usr/share/elasticsearch/data"
                }
            ]
        },
        {
            "type": 1,
            "title": "Ghost",
            "description": "Free and open-source blogging platform",
            "categories": [
                "CMS"
            ],
            "note": "Access the blog management interface under <code>/ghost/</code>.",
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
            "image": "ghost:latest",
            "ports": [
                "2368/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/ghost/content"
                }
            ]
        },
        {
            "type": 1,
            "title": "Gitlab CE",
            "description": "Open-source end-to-end software development platform",
            "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
            "categories": [
                "Development"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
            "image": "gitlab/gitlab-ce:latest",
            "ports": [
                "80/tcp",
                "443/tcp",
                "22/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/gitlab"
                },
                {
                    "container": "/var/log/gitlab"
                },
                {
                    "container": "/var/opt/gitlab"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Web",
                "Other"
            ],
            "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/heimdall:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/heimdall-icon.png",
            "name": "heimdall",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Heimdall",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Heimdall",
                    "container": "/config"
                }
            ]
        },
        {
            "type": 2,
            "title": "IronFunctions",
            "description": "Open-source serverless computing platform",
            "note": "Deploys the IronFunctions API and UI.",
            "categories": [
                "serverless"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/ironfunctions/docker-stack.yml"
            }
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/jackett:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/jacket-icon.png",
            "name": "jackett",
            "platform": "linux",
            "ports": [
                "9117:9117/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Jackett",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Jackett",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ]
        },
        {
            "type": 1,
            "title": "Jenkins",
            "description": "Open-source continuous integration tool",
            "categories": [
                "Continuous-Integration",
                "Other"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
            "image": "jenkins/jenkins:lts-jdk11",
            "ports": [
                "8080/tcp",
                "50000/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/jenkins_home"
                }
            ]
        },
        {
            "type": 3,
            "title": "LiveSwitch",
            "description": "A basic LiveSwitch compose with gateway, caching, database and media server",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/liveswitch/docker-compose.yml"
            },
            "env": [
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "Postgres password"
                }
            ]
        },
        {
            "type": 1,
            "title": "MariaDB",
            "description": "Performance beyond MySQL",
            "categories": [
                "DB"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mariadb.png",
            "image": "mariadb:latest",
            "env": [
                {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "label": "Root password"
                }
            ],
            "ports": [
                "3306/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/mysql"
                }
            ]
        },
        {
            "type": 1,
            "title": "Mongo",
            "description": "Open-source document-oriented database",
            "categories": [
                "DB"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
            "image": "mongo:latest",
            "ports": [
                "27017/tcp"
            ],
            "volumes": [
                {
                    "container": "/data/db"
                }
            ]
        },
        {
            "type": 1,
            "title": "MySQL",
            "description": "The most popular open-source database",
            "categories": [
                "DB"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
            "image": "mysql/mysql-server:5.7",
            "env": [
                {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "label": "Root password"
                },
                {
                    "name": "MYSQL_ROOT_HOST",
                    "default": "%",
                    "preset": true
                }
            ],
            "ports": [
                "3306/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/mysql"
                }
            ]
        },
        {
            "type": 3,
            "title": "Nextcloud",
            "name": "nextcloud",
            "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
            "categories": [
                "Cloud"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/nextcloud-icon.png",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/nextcloud/nextcloud.yml"
            },
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Europe/Madrid",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "MYSQL ROOT PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD"
                },
                {
                    "label": "MYSQL USER",
                    "name": "MYSQL_USER"
                },
                {
                    "label": "MYSQL PASSWORD",
                    "name": "MYSQL_PASSWORD"
                },
                {
                    "label": "MYSQL DATABASE",
                    "name": "MYSQL_DATABASE"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ]
        },
        {
            "type": 1,
            "title": "Nginx",
            "description": "High performance web server",
            "categories": [
                "Web",
                "Proxy"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
            "image": "nginx:latest",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/nginx"
                },
                {
                    "container": "/usr/share/nginx/html"
                }
            ]
        },
        {
            "categories": [
                "Proxy",
                "Networks"
            ],
            "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
            "image": "jc21/nginx-proxy-manager",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/proxy_mgr.png",
            "name": "nginx-proxy-manager",
            "platform": "linux",
            "env": [
                {
                    "label": "DB_SQLITE_FILE",
                    "name": "DB_SQLITE_FILE",
                    "default": "/data/database.sqlite"
                }
            ],
            "ports": [
                "80:80/tcp",
                "81:81/tcp",
                "443:443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Nginx Proxy Manager",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/data",
                    "container": "/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/letsencrypt",
                    "container": "/etc/letsencrypt"
                }
            ]
        },
        {
            "type": 1,
            "title": "Onlyoffice-Document-Server",
            "description": "Onlyoffice-Document-Server Online office suite",
            "categories": [
                "Productivity",
                "Cloud"
            ],
            "platform": "linux",
            "logo": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSJyS8b-u9-sXijjh8NmAktcDg60w2oKeGJgIiKLyI6fRs9RBgus0rfOivJ1seLdH2Zlpc&usqp=CAU",
            "image": "onlyoffice/documentserver",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "always"
        },
        {
            "categories": [
                "Networks"
            ],
            "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
            "env": [
                {
                    "label": "INTERFACE",
                    "name": "INTERFACE",
                    "set": "eth0"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/openvpn-as:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/openvpn-as-icon.png",
            "name": "openvpn-as",
            "platform": "linux",
            "ports": [
                "943:943/tcp",
                "9443:9443/tcp",
                "1194:1194/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "OpenVPN Access Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Networks",
                "Tools"
            ],
            "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
            "image": "pihole/pihole:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/pihole.png",
            "name": "pihole",
            "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
            "platform": "linux",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "1010:80/tcp",
                "4443:443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Pi-Hole",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole",
                    "container": "/etc/pihole"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
                    "container": "/etc/dnsmasq.d"
                }
            ]
        },
        {
            "categories": [
                "Video"
            ],
            "description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "VERSION",
                    "name": "VERSION",
                    "set": "latest"
                }
            ],
            "image": "linuxserver/plex:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/plex-icon.png",
            "name": "plex",
            "network": "host",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Plex",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Plex",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/TV",
                    "container": "/tv"
                },
                {
                    "bind": "/portainer/Movies",
                    "container": "/movies"
                }
            ]
        },
        {
            "type": 2,
            "title": "Portainer Agent",
            "description": "Manage all the resources in your Swarm cluster",
            "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
            "categories": [
                "portainer"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/portainer-agent/docker-stack.yml"
            }
        },
        {
            "type": 1,
            "title": "PostgreSQL",
            "description": "The most advanced open-source database",
            "categories": [
                "DB"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
            "image": "postgres:latest",
            "env": [
                {
                    "name": "POSTGRES_USER",
                    "label": "Superuser"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "Superuser password"
                }
            ],
            "ports": [
                "5432/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/postgresql/data"
                }
            ]
        },
        {
            "categories": [
                "Cloud"
            ],
            "description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/projectsend:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/projectsend-logo.png",
            "name": "projectsend",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "ProjectSend",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/ProjectSend",
                    "container": "/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/ProjectSend",
                    "container": "/config"
                }
            ]
        },
        {
            "title": "Sematext Docker Agent",
            "type": 2,
            "categories": [
                "Log Management",
                "Monitoring"
            ],
            "description": "Collect logs, metrics and docker events",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
            "platform": "linux",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
            },
            "env": [
                {
                    "name": "LOGSENE_TOKEN",
                    "label": "Logs token"
                },
                {
                    "name": "SPM_TOKEN",
                    "label": "SPM monitoring token"
                }
            ]
        },
        {
            "type": 1,
            "title": "SQL Server",
            "description": "Microsoft SQL Server on Linux",
            "categories": [
                "DB"
            ],
            "platform": "linux",
            "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
            "image": "mcr.microsoft.com/mssql/server:2019-latest",
            "ports": [
                "1433/tcp"
            ],
            "env": [
                {
                    "name": "ACCEPT_EULA",
                    "default": "Y",
                    "preset": true
                },
                {
                    "name": "SA_PASSWORD",
                    "label": "SA password"
                }
            ]
        },
        {
            "categories": [
                "Downloaders",
                "Video"
            ],
            "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "hotio/sonarr:release",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/sonarr-icon.png",
            "name": "sonarr",
            "platform": "linux",
            "ports": [
                "8989:8989/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Sonarr",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Sonarr",
                    "container": "/config"
                },
                {
                    "bind": "/dev/rtc",
                    "container": "/dev/rtc"
                },
                {
                    "bind": "/portainer/TV",
                    "container": "/tv"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ]
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/transmission:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/transmission-icon.png",
            "name": "transmission",
            "platform": "linux",
            "ports": [
                "9091:9091/tcp",
                "51413:51413/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Transmission",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Transmission",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/Downloads",
                    "container": "/downloads"
                },
                {
                    "container": "/watch"
                }
            ]
        },
        {
            "categories": [
                "VPN",
                "Tools"
            ],
            "description": "This container contains OpenVPN and Transmission with a configuration where Transmission is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "MULLVAD",
                    "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
                    "label": "OPENVPN_PROVIDER",
                    "name": "OPENVPN_PROVIDER"
                },
                {
                    "default": "",
                    "label": "OPENVPN_USERNAME",
                    "name": "OPENVPN_USERNAME"
                },
                {
                    "default": "",
                    "label": "OPENVPN_PASSWORD",
                    "name": "OPENVPN_PASSWORD"
                },
                {
                    "default": "192.168.0.0/24",
                    "label": "LOCAL_NETWORK",
                    "name": "LOCAL_NETWORK"
                }
            ],
            "image": "haugene/transmission-openvpn:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/transmission-icon.png",
            "name": "transmission-openvpn",
            "note": "List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
            "platform": "linux",
            "ports": [
                "9091:9091/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Transmission-OpenVPN",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Downloads",
                    "container": "/data"
                },
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime"
                }
            ]
        },
        {
            "type": 1,
            "title": "Ubuntu",
            "description": "Debian-based Linux operating system",
            "categories": [
                "Operating-System"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
            "image": "ubuntu:latest",
            "interactive": true,
            "command": "/bin/bash"
        },
        {
            "type": 3,
            "title": "WordPress",
            "description": "WordPress setup with a MariaDB database and PhpMyAdmin",
            "note": "Deploys a WordPress instance connected to a MariaDB database with PhpMyAdmin.",
            "categories": [
                "CMS"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
            "repository": {
                "url": "https://github.com/AurelioFV/template_portainer",
                "stackfile": "stacks/wordpress/docker-compose.yml"
            },
            "env": [
                {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "label": "Database root password",
                    "description": "Password used by the MySQL root user."
                },
                {
                    "name": "MYSQL_USER",
                    "label": "Database user ",
                    "description": "User used by the MySQL."
                },
                {
                    "name": "MYSQL_PASSWORD",
                    "label": "Database user password",
                    "description": "Password used by the MySQL user."
                },
                {
                    "name": "MYSQL_DATABASE",
                    "label": "Database name",
                    "description": "Database name."
                }
            ]
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
            "image": "tzahi12345/youtubedl-material:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/ytdlm.png",
            "name": "youtubedl-material",
            "platform": "linux",
            "ports": [
                "17442:17442/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "YouTubeDL-Material",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/YTDLM",
                    "container": "/app/appdata"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Video",
                    "container": "/app/video"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Subscriptions",
                    "container": "/app/subscriptions"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Users",
                    "container": "/app/users"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Audio",
                    "container": "/app/audio"
                }
            ]
        }
    ]
}
